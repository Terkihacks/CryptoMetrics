name: CI/CD NodeJS with Grunt Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3  # Updated version

    - name: Set up Node.js
      uses: actions/setup-node@v3  # Updated version
      with:
        node-version: '16'

    - name: Install Dependencies
      run: npm install

    - name: Run Linting
      run: npm run lint

    - name: Run Tests
      run: npm test

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: lint_and_test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3  # Updated version

    - name: Log in to DockerHub
      uses: docker/login-action@v2.1.0  # Updated version
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker-compose -f docker-compose.yml build

    - name: Push Docker Image to Docker Hub
      run: |
        docker-compose -f docker-compose.yml push

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3  # Updated version

    - name: Deploy to Production (example for Heroku)
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        heroku login -i
        heroku container:push web --app your-app-name
        heroku container:release web --app your-app-name
